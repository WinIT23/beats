// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

//line parser.rl:1
// Code generated by ragel DO NOT EDIT.

package cef

import (
	"fmt"
	"strconv"

	"go.uber.org/multierr"
)

var cef_start int = 1
var _ = cef_start
var cef_first_final int = 36
var _ = cef_first_final
var cef_error int = 0
var _ = cef_error
var cef_en_gobble_extension int = 33
var _ = cef_en_gobble_extension
var cef_en_main int = 1
var _ = cef_en_main
var cef_en_main_cef_extensions int = 29
var _ = cef_en_main_cef_extensions

func (e *Event) unpack(data string) error {
	cs, p, pe, eof := 0, 0, len(data), len(data)
	mark, mark_slash := 0, 0

	// state related to CEF values.
	var state cefState

	// flag for completion of CEF header.
	complete := false

	// recoveredErrs are problems with the message that the parser was able to
	// recover from (though the parsing might not be "correct").
	var recoveredErrs []error

	e.init(data)

	{
		cs = int(cef_start)

	}
	{
	_resume:
		{

		}
		if (p) == (pe) && (p) != eof {
			goto _out

		}
		switch cs {
		case 1:
			if (p) == eof {
				goto _ctr1

			} else {
				if (data[(p)]) == 67 {
					goto _ctr2

				}
				goto _ctr0

			}
		case 0:
			if (p) == eof {
				goto _ctr0

			} else {
				goto _again

			}
		case 2:
			if (p) == eof {
				goto _ctr2

			} else {
				if (data[(p)]) == 69 {
					goto _ctr3

				}
				goto _ctr0

			}
		case 3:
			if (p) == eof {
				goto _ctr3

			} else {
				if (data[(p)]) == 70 {
					goto _ctr4

				}
				goto _ctr0

			}
		case 4:
			if (p) == eof {
				goto _ctr4

			} else {
				if (data[(p)]) == 58 {
					goto _ctr5

				}
				goto _ctr0

			}
		case 5:
			if (p) == eof {
				goto _ctr5

			} else {
				if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
					goto _ctr6

				}
				goto _ctr0

			}
		case 6:
			if (p) == eof {
				goto _ctr7

			} else {
				if (data[(p)]) == 124 {
					goto _ctr8

				}
				if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
					goto _ctr7

				}
				goto _ctr0

			}
		case 7:
			if (p) == eof {
				goto _ctr9

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr11

					}
				case 124:
					{
						goto _ctr12

					}

				}
				goto _ctr10

			}
		case 8:
			if (p) == eof {
				goto _ctr13

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr14

					}
				case 124:
					{
						goto _ctr15

					}

				}
				goto _ctr13

			}
		case 9:
			if (p) == eof {
				goto _ctr16

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr17

					}
				case 124:
					{
						goto _ctr17

					}

				}
				goto _ctr0

			}
		case 10:
			if (p) == eof {
				goto _ctr17

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr19

					}
				case 124:
					{
						goto _ctr20

					}

				}
				goto _ctr18

			}
		case 11:
			if (p) == eof {
				goto _ctr21

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr23

					}
				case 124:
					{
						goto _ctr24

					}

				}
				goto _ctr22

			}
		case 12:
			if (p) == eof {
				goto _ctr25

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr26

					}
				case 124:
					{
						goto _ctr27

					}

				}
				goto _ctr25

			}
		case 13:
			if (p) == eof {
				goto _ctr28

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr29

					}
				case 124:
					{
						goto _ctr29

					}

				}
				goto _ctr0

			}
		case 14:
			if (p) == eof {
				goto _ctr29

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr31

					}
				case 124:
					{
						goto _ctr32

					}

				}
				goto _ctr30

			}
		case 15:
			if (p) == eof {
				goto _ctr33

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr35

					}
				case 124:
					{
						goto _ctr36

					}

				}
				goto _ctr34

			}
		case 16:
			if (p) == eof {
				goto _ctr37

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr38

					}
				case 124:
					{
						goto _ctr39

					}

				}
				goto _ctr37

			}
		case 17:
			if (p) == eof {
				goto _ctr40

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr41

					}
				case 124:
					{
						goto _ctr41

					}

				}
				goto _ctr0

			}
		case 18:
			if (p) == eof {
				goto _ctr41

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr43

					}
				case 124:
					{
						goto _ctr44

					}

				}
				goto _ctr42

			}
		case 19:
			if (p) == eof {
				goto _ctr45

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr47

					}
				case 124:
					{
						goto _ctr48

					}

				}
				goto _ctr46

			}
		case 20:
			if (p) == eof {
				goto _ctr49

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr50

					}
				case 124:
					{
						goto _ctr51

					}

				}
				goto _ctr49

			}
		case 21:
			if (p) == eof {
				goto _ctr52

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr53

					}
				case 124:
					{
						goto _ctr53

					}

				}
				goto _ctr0

			}
		case 22:
			if (p) == eof {
				goto _ctr53

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr55

					}
				case 124:
					{
						goto _ctr56

					}

				}
				goto _ctr54

			}
		case 23:
			if (p) == eof {
				goto _ctr57

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr59

					}
				case 124:
					{
						goto _ctr60

					}

				}
				goto _ctr58

			}
		case 24:
			if (p) == eof {
				goto _ctr61

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr62

					}
				case 124:
					{
						goto _ctr63

					}

				}
				goto _ctr61

			}
		case 25:
			if (p) == eof {
				goto _ctr64

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr65

					}
				case 124:
					{
						goto _ctr65

					}

				}
				goto _ctr0

			}
		case 26:
			if (p) == eof {
				goto _ctr65

			} else {
				switch data[(p)] {
				case 92:
					{
						goto _ctr67

					}
				case 124:
					{
						goto _ctr68

					}

				}
				goto _ctr66

			}
		case 27:
			if (p) == eof {
				goto _ctr69

			} else {
				switch data[(p)] {
				case 45:
					{
						goto _ctr70

					}
				case 124:
					{
						goto _ctr71

					}

				}
				if (data[(p)]) < 65 {
					if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
						goto _ctr70

					}

				} else if (data[(p)]) > 90 {
					if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
						goto _ctr70

					}

				} else {
					goto _ctr70

				}
				goto _ctr0

			}
		case 28:
			if (p) == eof {
				goto _ctr72

			} else {
				switch data[(p)] {
				case 45:
					{
						goto _ctr72

					}
				case 124:
					{
						goto _ctr73

					}

				}
				if (data[(p)]) < 65 {
					if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
						goto _ctr72

					}

				} else if (data[(p)]) > 90 {
					if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
						goto _ctr72

					}

				} else {
					goto _ctr72

				}
				goto _ctr0

			}
		case 36:
			if (p) == eof {
				goto _ctr88

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr89

					}
				case 95:
					{
						goto _ctr90

					}

				}
				if (data[(p)]) < 65 {
					if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
						goto _ctr90

					}

				} else if (data[(p)]) > 90 {
					if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
						goto _ctr90

					}

				} else {
					goto _ctr90

				}
				goto _ctr0

			}
		case 29:
			if (p) == eof {
				goto _ctr74

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr74

					}
				case 95:
					{
						goto _ctr75

					}

				}
				if (data[(p)]) < 65 {
					if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
						goto _ctr75

					}

				} else if (data[(p)]) > 90 {
					if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
						goto _ctr75

					}

				} else {
					goto _ctr75

				}
				goto _ctr0

			}
		case 30:
			if (p) == eof {
				goto _ctr76

			} else {
				switch data[(p)] {
				case 61:
					{
						goto _ctr77

					}
				case 93:
					{
						goto _ctr76

					}
				case 95:
					{
						goto _ctr76

					}

				}
				if (data[(p)]) < 48 {
					if 44 <= (data[(p)]) && (data[(p)]) <= 46 {
						goto _ctr76

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 91 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr76

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr76

					}

				} else {
					goto _ctr76

				}
				goto _ctr0

			}
		case 37:
			if (p) == eof {
				goto _ctr91

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr94

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr95

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr93

				}
				goto _ctr92

			}
		case 38:
			if (p) == eof {
				goto _ctr96

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr99

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr100

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr98

				}
				goto _ctr97

			}
		case 39:
			if (p) == eof {
				goto _ctr101

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr99

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr100

					}
				case 95:
					{
						goto _ctr102

					}

				}
				if (data[(p)]) < 48 {
					if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
						goto _ctr98

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 90 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr102

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr102

					}

				} else {
					goto _ctr102

				}
				goto _ctr97

			}
		case 40:
			if (p) == eof {
				goto _ctr103

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr99

					}
				case 61:
					{
						goto _ctr105

					}
				case 92:
					{
						goto _ctr100

					}
				case 95:
					{
						goto _ctr104

					}

				}
				if (data[(p)]) < 48 {
					if (data[(p)]) > 13 {
						if 44 <= (data[(p)]) && (data[(p)]) <= 46 {
							goto _ctr104

						}

					} else if (data[(p)]) >= 9 {
						goto _ctr98

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 93 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr104

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr104

					}

				} else {
					goto _ctr104

				}
				goto _ctr97

			}
		case 41:
			if (p) == eof {
				goto _ctr106

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr109

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr110

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr108

				}
				goto _ctr107

			}
		case 42:
			if (p) == eof {
				goto _ctr111

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr114

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr115

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr113

				}
				goto _ctr112

			}
		case 43:
			if (p) == eof {
				goto _ctr116

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr114

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr115

					}
				case 95:
					{
						goto _ctr117

					}

				}
				if (data[(p)]) < 48 {
					if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
						goto _ctr113

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 90 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr117

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr117

					}

				} else {
					goto _ctr117

				}
				goto _ctr112

			}
		case 44:
			if (p) == eof {
				goto _ctr118

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr114

					}
				case 61:
					{
						goto _ctr105

					}
				case 92:
					{
						goto _ctr115

					}
				case 95:
					{
						goto _ctr119

					}

				}
				if (data[(p)]) < 48 {
					if (data[(p)]) > 13 {
						if 44 <= (data[(p)]) && (data[(p)]) <= 46 {
							goto _ctr119

						}

					} else if (data[(p)]) >= 9 {
						goto _ctr113

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 93 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr119

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr119

					}

				} else {
					goto _ctr119

				}
				goto _ctr112

			}
		case 31:
			if (p) == eof {
				goto _ctr78

			} else {
				switch data[(p)] {
				case 61:
					{
						goto _ctr80

					}
				case 92:
					{
						goto _ctr80

					}
				case 110:
					{
						goto _ctr80

					}
				case 114:
					{
						goto _ctr80

					}

				}
				goto _ctr79

			}
		case 45:
			if (p) == eof {
				goto _ctr120

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr123

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr124

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr122

				}
				goto _ctr121

			}
		case 32:
			if (p) == eof {
				goto _ctr81

			} else {
				switch data[(p)] {
				case 61:
					{
						goto _ctr82

					}
				case 92:
					{
						goto _ctr82

					}
				case 110:
					{
						goto _ctr82

					}
				case 114:
					{
						goto _ctr82

					}

				}
				goto _ctr79

			}
		case 46:
			if (p) == eof {
				goto _ctr125

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr128

					}
				case 61:
					{
						goto _ctr79

					}
				case 92:
					{
						goto _ctr129

					}

				}
				if 9 <= (data[(p)]) && (data[(p)]) <= 13 {
					goto _ctr127

				}
				goto _ctr126

			}
		case 33:
			if (p) == eof {
				goto _ctr83

			} else {
				if (data[(p)]) == 32 {
					goto _ctr84

				}
				goto _ctr83

			}
		case 34:
			if (p) == eof {
				goto _ctr85

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr84

					}
				case 95:
					{
						goto _ctr86

					}

				}
				if (data[(p)]) < 65 {
					if 48 <= (data[(p)]) && (data[(p)]) <= 57 {
						goto _ctr86

					}

				} else if (data[(p)]) > 90 {
					if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
						goto _ctr86

					}

				} else {
					goto _ctr86

				}
				goto _ctr83

			}
		case 35:
			if (p) == eof {
				goto _ctr86

			} else {
				switch data[(p)] {
				case 32:
					{
						goto _ctr84

					}
				case 61:
					{
						goto _ctr87

					}
				case 93:
					{
						goto _ctr86

					}
				case 95:
					{
						goto _ctr86

					}

				}
				if (data[(p)]) < 48 {
					if 44 <= (data[(p)]) && (data[(p)]) <= 46 {
						goto _ctr86

					}

				} else if (data[(p)]) > 57 {
					if (data[(p)]) > 91 {
						if 97 <= (data[(p)]) && (data[(p)]) <= 122 {
							goto _ctr86

						}

					} else if (data[(p)]) >= 65 {
						goto _ctr86

					}

				} else {
					goto _ctr86

				}
				goto _ctr83

			}
		case 47:
			if (p) == eof {
				goto _ctr130

			} else {
				if (data[(p)]) == 32 {
					goto _ctr84

				}
				goto _ctr83

			}

		}
	_ctr0:
		cs = 0
		goto _again
	_ctr79:
		cs = 0
		goto f24
	_ctr1:
		cs = 1
		goto _again
	_ctr2:
		cs = 2
		goto _again
	_ctr3:
		cs = 3
		goto _again
	_ctr4:
		cs = 4
		goto _again
	_ctr5:
		cs = 5
		goto _again
	_ctr7:
		cs = 6
		goto _again
	_ctr6:
		cs = 6
		goto f0
	_ctr9:
		cs = 7
		goto _again
	_ctr8:
		cs = 7
		goto f1
	_ctr13:
		cs = 8
		goto _again
	_ctr10:
		cs = 8
		goto f0
	_ctr18:
		cs = 8
		goto f6
	_ctr16:
		cs = 9
		goto _again
	_ctr11:
		cs = 9
		goto f2
	_ctr14:
		cs = 9
		goto f4
	_ctr19:
		cs = 9
		goto f7
	_ctr17:
		cs = 10
		goto _again
	_ctr21:
		cs = 11
		goto _again
	_ctr12:
		cs = 11
		goto f3
	_ctr15:
		cs = 11
		goto f5
	_ctr20:
		cs = 11
		goto f8
	_ctr25:
		cs = 12
		goto _again
	_ctr22:
		cs = 12
		goto f0
	_ctr30:
		cs = 12
		goto f6
	_ctr28:
		cs = 13
		goto _again
	_ctr23:
		cs = 13
		goto f2
	_ctr26:
		cs = 13
		goto f4
	_ctr31:
		cs = 13
		goto f7
	_ctr29:
		cs = 14
		goto _again
	_ctr33:
		cs = 15
		goto _again
	_ctr24:
		cs = 15
		goto f9
	_ctr27:
		cs = 15
		goto f10
	_ctr32:
		cs = 15
		goto f11
	_ctr37:
		cs = 16
		goto _again
	_ctr34:
		cs = 16
		goto f0
	_ctr42:
		cs = 16
		goto f6
	_ctr40:
		cs = 17
		goto _again
	_ctr35:
		cs = 17
		goto f2
	_ctr38:
		cs = 17
		goto f4
	_ctr43:
		cs = 17
		goto f7
	_ctr41:
		cs = 18
		goto _again
	_ctr45:
		cs = 19
		goto _again
	_ctr36:
		cs = 19
		goto f12
	_ctr39:
		cs = 19
		goto f13
	_ctr44:
		cs = 19
		goto f14
	_ctr49:
		cs = 20
		goto _again
	_ctr46:
		cs = 20
		goto f0
	_ctr54:
		cs = 20
		goto f6
	_ctr52:
		cs = 21
		goto _again
	_ctr47:
		cs = 21
		goto f2
	_ctr50:
		cs = 21
		goto f4
	_ctr55:
		cs = 21
		goto f7
	_ctr53:
		cs = 22
		goto _again
	_ctr57:
		cs = 23
		goto _again
	_ctr48:
		cs = 23
		goto f15
	_ctr51:
		cs = 23
		goto f16
	_ctr56:
		cs = 23
		goto f17
	_ctr61:
		cs = 24
		goto _again
	_ctr58:
		cs = 24
		goto f0
	_ctr66:
		cs = 24
		goto f6
	_ctr64:
		cs = 25
		goto _again
	_ctr59:
		cs = 25
		goto f2
	_ctr62:
		cs = 25
		goto f4
	_ctr67:
		cs = 25
		goto f7
	_ctr65:
		cs = 26
		goto _again
	_ctr69:
		cs = 27
		goto _again
	_ctr60:
		cs = 27
		goto f18
	_ctr63:
		cs = 27
		goto f19
	_ctr68:
		cs = 27
		goto f20
	_ctr72:
		cs = 28
		goto _again
	_ctr70:
		cs = 28
		goto f0
	_ctr74:
		cs = 29
		goto _again
	_ctr89:
		cs = 29
		goto f27
	_ctr76:
		cs = 30
		goto _again
	_ctr75:
		cs = 30
		goto f0
	_ctr90:
		cs = 30
		goto f28
	_ctr115:
		cs = 31
		goto f4
	_ctr124:
		cs = 31
		goto f7
	_ctr78:
		cs = 31
		goto f24
	_ctr110:
		cs = 31
		goto f32
	_ctr100:
		cs = 32
		goto f4
	_ctr129:
		cs = 32
		goto f7
	_ctr81:
		cs = 32
		goto f24
	_ctr95:
		cs = 32
		goto f32
	_ctr83:
		cs = 33
		goto _again
	_ctr85:
		cs = 34
		goto _again
	_ctr84:
		cs = 34
		goto f0
	_ctr86:
		cs = 35
		goto _again
	_ctr71:
		cs = 36
		goto f21
	_ctr73:
		cs = 36
		goto f22
	_ctr88:
		cs = 36
		goto f27
	_ctr77:
		cs = 37
		goto f23
	_ctr91:
		cs = 37
		goto f29
	_ctr98:
		cs = 38
		goto _again
	_ctr127:
		cs = 38
		goto f6
	_ctr97:
		cs = 38
		goto f25
	_ctr92:
		cs = 38
		goto f30
	_ctr93:
		cs = 38
		goto f31
	_ctr96:
		cs = 38
		goto f33
	_ctr126:
		cs = 38
		goto f37
	_ctr99:
		cs = 39
		goto _again
	_ctr128:
		cs = 39
		goto f6
	_ctr94:
		cs = 39
		goto f31
	_ctr101:
		cs = 39
		goto f33
	_ctr104:
		cs = 40
		goto f25
	_ctr103:
		cs = 40
		goto f33
	_ctr102:
		cs = 40
		goto f34
	_ctr105:
		cs = 41
		goto f23
	_ctr106:
		cs = 41
		goto f29
	_ctr113:
		cs = 42
		goto _again
	_ctr122:
		cs = 42
		goto f6
	_ctr112:
		cs = 42
		goto f25
	_ctr107:
		cs = 42
		goto f30
	_ctr108:
		cs = 42
		goto f31
	_ctr111:
		cs = 42
		goto f33
	_ctr121:
		cs = 42
		goto f37
	_ctr114:
		cs = 43
		goto _again
	_ctr123:
		cs = 43
		goto f6
	_ctr109:
		cs = 43
		goto f31
	_ctr116:
		cs = 43
		goto f33
	_ctr119:
		cs = 44
		goto f25
	_ctr118:
		cs = 44
		goto f33
	_ctr117:
		cs = 44
		goto f35
	_ctr80:
		cs = 45
		goto f25
	_ctr120:
		cs = 45
		goto f36
	_ctr82:
		cs = 46
		goto f25
	_ctr125:
		cs = 46
		goto f36
	_ctr130:
		cs = 47
		goto _again
	_ctr87:
		cs = 47
		goto f26
	f0:
		{
			mark = p
		}
		goto _again
	f4:
		{
			mark_slash = p
		}
		goto _again
	f6:
		{
			state.pushEscape(mark_slash, p)
		}
		goto _again
	f1:
		{
			e.Version, _ = strconv.Atoi(data[mark:p])
		}
		goto _again
	f5:
		{
			e.DeviceVendor = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f10:
		{
			e.DeviceProduct = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f13:
		{
			e.DeviceVersion = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f16:
		{
			e.DeviceEventClassID = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f19:
		{
			e.Name = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f22:
		{
			e.Severity = data[mark:p]
		}
		goto _again
	f27:
		{
			complete = true
		}
		goto _again
	f23:
		{
			if len(state.key) != 0 && state.valueStart < mark {
				// We should not be here, but purge the escapes and handle them.
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:mark-1], state.valueStart, state.escapes))
				state.reset()
			}
			state.key = data[mark:p]
		}
		goto _again
	f31:
		{
			if len(state.escapes) != 0 { // See ragel comment below.
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
			state.valueStart = p
			state.valueEnd = p
		}
		goto _again
	f25:
		{
			state.valueEnd = p + 1
		}
		goto _again
	f33:
		{
			if len(state.key) != 0 && state.valueStart < state.valueEnd {
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
		}
		goto _again
	f24:
		{
			recoveredErrs = append(recoveredErrs, fmt.Errorf("malformed value for %s at pos %d", state.key, p+1))
			{
				(p) = (p) - 1

			}
			cs = 33
		}
		goto _again
	f26:
		{
			state.reset()
			// Resume processing at p, the start of the next extension key.
			p = mark
			cs = 29
		}
		goto _again
	f2:
		{
			mark = p
		}
		{
			mark_slash = p
		}
		goto _again
	f3:
		{
			mark = p
		}
		{
			e.DeviceVendor = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f9:
		{
			mark = p
		}
		{
			e.DeviceProduct = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f12:
		{
			mark = p
		}
		{
			e.DeviceVersion = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f15:
		{
			mark = p
		}
		{
			e.DeviceEventClassID = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f18:
		{
			mark = p
		}
		{
			e.Name = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f21:
		{
			mark = p
		}
		{
			e.Severity = data[mark:p]
		}
		goto _again
	f35:
		{
			mark = p
		}
		{
			state.valueEnd = p + 1
		}
		goto _again
	f7:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			mark_slash = p
		}
		goto _again
	f8:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			e.DeviceVendor = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f11:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			e.DeviceProduct = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f14:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			e.DeviceVersion = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f17:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			e.DeviceEventClassID = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f20:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			e.Name = replaceEscapes(data[mark:p], mark, state.escapes)
			state.reset()
		}
		goto _again
	f37:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			state.valueEnd = p + 1
		}
		goto _again
	f36:
		{
			state.pushEscape(mark_slash, p)
		}
		{
			if len(state.key) != 0 && state.valueStart < state.valueEnd {
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
		}
		goto _again
	f28:
		{
			complete = true
		}
		{
			mark = p
		}
		goto _again
	f32:
		{
			if len(state.escapes) != 0 { // See ragel comment below.
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
			state.valueStart = p
			state.valueEnd = p
		}
		{
			mark_slash = p
		}
		goto _again
	f30:
		{
			if len(state.escapes) != 0 { // See ragel comment below.
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
			state.valueStart = p
			state.valueEnd = p
		}
		{
			state.valueEnd = p + 1
		}
		goto _again
	f29:
		{
			if len(state.escapes) != 0 { // See ragel comment below.
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
			state.valueStart = p
			state.valueEnd = p
		}
		{
			if len(state.key) != 0 && state.valueStart < state.valueEnd {
				e.pushExtension(state.key, replaceEscapes(data[state.valueStart:state.valueEnd], state.valueStart, state.escapes))
				state.reset()
			}
		}
		goto _again
	f34:
		{
			state.valueEnd = p + 1
		}
		{
			mark = p
		}
		goto _again
	_again:
		{

		}
		if (p) == eof {
			if cs >= 36 {
				goto _out

			}

		} else {
			if cs != 0 {
				(p) += 1
				goto _resume

			}

		}
	_out:
		{

		}

	}
	if cs < cef_first_final {
		// Reached an early end.
		if p == pe {
			if complete {
				return multierr.Append(multierr.Combine(recoveredErrs...), errUnexpectedEndOfEvent)
			}
			return multierr.Append(multierr.Combine(recoveredErrs...), multierr.Combine(errUnexpectedEndOfEvent, errIncompleteHeader))
		}

		// Encountered invalid input.
		return multierr.Append(multierr.Combine(recoveredErrs...), fmt.Errorf("error in CEF event at pos %d", p+1))
	}

	return multierr.Combine(recoveredErrs...)
}
